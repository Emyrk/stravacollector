# See https://golangci-lint.run/usage/configuration/

linters-settings:


issues:
  # Rules listed here: https://github.com/securego/gosec#available-rules
  exclude-rules:
    - path: _test\.go
      linters:
        # We use assertions rather than explicitly checking errors in tests
        - errcheck
        - forcetypeassert

  fix: true
  max-issues-per-linter: 0
  max-same-issues: 0

run:
  concurrency: 4
  skip-dirs:
    - node_modules
  skip-files:
    - scripts/rules.go
  timeout: 5m

# Over time, add more and more linters from
# https://golangci-lint.run/usage/linters/ as the code improves.
#linters:
#  disable-all: true
#  enable:
#    - asciicheck
#    - bidichk
#    - bodyclose
#    - dogsled
#    - errcheck
#    - errname
#    - errorlint
#    - exportloopref
#    - forcetypeassert
#    - gocritic
#    - gocyclo
#    - goimports
#    - gomodguard
#    - gosec
#    - gosimple
#    - govet
#    - importas
#    - ineffassign
#    - makezero
#    - misspell
#    - nilnil
#    - noctx
#    - paralleltest
#    - revive
#
#    # These don't work until the following issue is solved.
#    # https://github.com/golangci/golangci-lint/issues/2649
#    # - rowserrcheck
#    # - sqlclosecheck
#    # - structcheck
#    # - wastedassign
#
#    - staticcheck
#    - tenv
#    # In Go, it's possible for a package to test it's internal functionality
#    # without testing any exported functions. This is enabled to promote
#    # decomposing a package before testing it's internals. A function caller
#    # should be able to test most of the functionality from exported functions.
#    #
#    # There are edge-cases to this rule, but they should be carefully considered
#    # to avoid structural inconsistency.
#    - testpackage
#    - tparallel
#    - typecheck
#    - unconvert
#    - unused
