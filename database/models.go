// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2

package database

import (
	"time"

	"github.com/google/uuid"
)

type Athlete struct {
	ID        int64  `db:"id" json:"id"`
	Premium   bool   `db:"premium" json:"premium"`
	Username  string `db:"username" json:"username"`
	Firstname string `db:"firstname" json:"firstname"`
	Lastname  string `db:"lastname" json:"lastname"`
	Sex       string `db:"sex" json:"sex"`
	// Oauth app client ID
	ProviderID        string    `db:"provider_id" json:"provider_id"`
	CreatedAt         time.Time `db:"created_at" json:"created_at"`
	UpdatedAt         time.Time `db:"updated_at" json:"updated_at"`
	OauthAccessToken  string    `db:"oauth_access_token" json:"oauth_access_token"`
	OauthRefreshToken string    `db:"oauth_refresh_token" json:"oauth_refresh_token"`
	OauthExpiry       time.Time `db:"oauth_expiry" json:"oauth_expiry"`
	Raw               string    `db:"raw" json:"raw"`
}

type AthleteEffort struct {
	ID           uuid.UUID `db:"id" json:"id"`
	AthleteID    int32     `db:"athlete_id" json:"athlete_id"`
	SegmentID    int32     `db:"segment_id" json:"segment_id"`
	LastChecked  time.Time `db:"last_checked" json:"last_checked"`
	BestEffortID int32     `db:"best_effort_id" json:"best_effort_id"`
	KomRank      int32     `db:"kom_rank" json:"kom_rank"`
}

type Segment struct {
	ID   int32  `db:"id" json:"id"`
	Name string `db:"name" json:"name"`
}
