name: MainUpdate

on:
  push:
  pull_request:

jobs:
  jobs:
    golangci:
      name: lint
      runs-on: ubuntu-latest
      steps:
        - uses: actions/setup-go@v4
          with:
            go-version: '1.20'
            cache: false
        - uses: actions/checkout@v3
        - name: golangci-lint
          uses: golangci/golangci-lint-action@v3
          with:
            # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
            version: v1.29

            # Optional: working directory, useful for monorepos
            # working-directory: somedir

            # Optional: golangci-lint command line arguments.
            # args: --issues-exit-code=0

            # Optional: show only new issues if it's a pull request. The default value is `false`.
            # only-new-issues: true

            # Optional: if set to true then the all caching functionality will be complete disabled,
            #           takes precedence over all other caching options.
            # skip-cache: true

            # Optional: if set to true then the action don't cache or restore ~/go/pkg.
            # skip-pkg-cache: true

            # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
            # skip-build-cache: true
  golang-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Build
        run: go build -v ./...
      - name: Test
        run: go test -v ./...
  golang-check:
    needs: [golangci, golang-test]
  docker-push:
    needs: golang-check
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.ref_type == 'tag' }}
          tags: emyrk/strava:latest
  deploy:
    if: github.ref_type == 'tag'
    needs: docker-push
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - uses: 'actions/checkout@v3'

      - uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v1'
        with:
          service: 'strava'
          image: 'emyrk/strava:latest'

      - name: 'Print URL'
        run: 'echo "${{ steps.deploy.outputs.url }}"'